name: Release

permissions:
  contents: write
  issues: write

on:
  push:
    tags:
      - "v*.*.*" # Matches final releases
      - "v*.*.*-*" # Matches prerelease tags (alpha, beta, rc, etc.)

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.0"

      - name: Run tests
        run: go test ./...

      - name: Build CLI binary
        working-directory: cmd/sail
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
          go build -ldflags "-X 'github.com/SailfinIO/sail/cmd/sail/version.Version=${GITHUB_REF##*/}'" \
          -o dist/sail-${{ matrix.goos }}-${{ matrix.goarch }} .

      - name: Get release upload URL
        id: get_release
        run: |
          # Strip off "refs/tags/" to get the tag name
          tag=${GITHUB_REF##*/}
          echo "Using tag: $tag"
          # Retrieve the release's upload URL and strip the placeholder part
          url=$(gh release view "$tag" --json uploadUrl --jq .uploadUrl | sed 's/{.*}//')
          echo "release_upload_url=${url}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Package CLI binary (Linux/macOS)
        if: matrix.goos != 'windows'
        run: |
          tar -czf sail-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz -C cmd/sail/dist sail-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Package CLI binary (Windows)
        if: matrix.goos == 'windows'
        run: |
          powershell -Command "Compress-Archive -Path cmd/sail/dist/sail-${{ matrix.goos }}-${{ matrix.goarch }} -DestinationPath sail-${{ matrix.goos }}-${{ matrix.goarch }}.zip"

      - name: List files
        run: ls -l

      - name: Upload CLI Binary (Linux/macOS)
        if: matrix.goos != 'windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.release_upload_url }}
          asset_path: sail-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          asset_name: sail-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          asset_content_type: application/octet-stream

      - name: Upload CLI Binary (Windows)
        if: matrix.goos == 'windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.release_upload_url }}
          asset_path: sail-${{ matrix.goos }}-${{ matrix.goarch }}.zip
          asset_name: sail-${{ matrix.goos }}-${{ matrix.goarch }}.zip
          asset_content_type: application/octet-stream
